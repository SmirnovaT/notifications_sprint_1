services:
  event_worker:
    build:
      context: ./notification_service
      dockerfile: ./Dockerfile.event_worker
    restart: always
    env_file:
      - ./notification_service/.env
    command: python -m src.event_worker.main
    depends_on:
      rabbitmq:
        condition: service_healthy

  scheduler_worker:
    build:
      context: ./scheduler_worker
      dockerfile: ./Dockerfile.scheduler_worker
    restart: always
    env_file: ./scheduler_worker/.env
    command: python -m ./scheduler_worker/main
    depends_on:
      rabbitmq:
        condition: service_healthy

  sender_worker:
    build:
      context: ./sender_worker
    restart: always
    env_file:
      - ./sender_worker/.env
    depends_on:
      rabbitmq:
        condition: service_healthy

  app:
    build:
      context: ./notification_service
    restart: always
    env_file:
      - ./notification_service/.env
    expose:
      - 8000
    depends_on:
      rabbitmq:
        condition: service_healthy

  mock_api:
    build:
      context: ./mock_api
    restart: always
    expose:
      - 8000

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    environment:
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 3s
      retries: 20
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    expose:
      - 27017

    volumes:
      - mongodb_data:/data/db

  mailhog:
    image: mailhog/mailhog
    restart: always

include:
  - ./airflow/docker-compose.yaml

volumes:
  mongodb_data:


